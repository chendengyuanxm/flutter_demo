def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def dartEnvironmentVariables = [
        APP_CHANNEL: 'dev',
        VERSION_CODE: 1,
        VERSION_NAME: '1.0.0',
]

if (project.hasProperty('dart-defines')) {
    dartEnvironmentVariables = dartEnvironmentVariables + project.property('dart-defines')
            .split(',')
            .collectEntries {entry ->
                def pair = URLDecoder.decode(entry).split('=')
                // 2.2版本, dart-defines被base64加密
//                def pair = new String(entry.decodeBase64(), 'UTF-8').split('=')
                [(pair.first()): (pair.last())]
            }
}

def keys = [:]
def channel = dartEnvironmentVariables.APP_CHANNEL
if (channel == 'prod') {
    keys.BAIDU_APPKEY="FOMjAfKguEua5VhdWLCbbHiOXb4cxiqX" //请输入百度KEY
    keys.JPUSH_APPKEY="3456e4566cfa7c1f65d04b7b" //请输入极光KEY
} else {
    keys.BAIDU_APPKEY="FOMjAfKguEua5VhdWLCbbHiOXb4cxiqX"
    keys.JPUSH_APPKEY="3456e4566cfa7c1f65d04b7b"
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//        applicationId "com.devin.flutter_demo"
        applicationId "com.timeloit.xiamenchengguan"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        manifestPlaceholders = [
                BAIDU_APPKEY: keys.BAIDU_APPKEY,
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : keys.JPUSH_APPKEY,
                JPUSH_CHANNEL: channel,
        ]
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
